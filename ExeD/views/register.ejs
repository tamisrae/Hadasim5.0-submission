<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Supplier Register</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body style="font-family: Arial, sans-serif; background-color: #f0f0f0;">

  <div class="container" style="max-width: 500px; margin-top: 50px;">
    <h2 style="text-align: center; color: #007bff;">Supplier Register</h2>

    <form method="POST" action="/supplier/register" id="register-form">
      <div style="margin-bottom: 15px;">
        <label for="username">Username</label>
        <input type="text" name="username" id="username" class="form-control" required>
      </div>
      
      <div style="margin-bottom: 15px;">
        <label for="password">Password</label>
        <input type="password" name="password" id="password" class="form-control" required>
      </div>

      <div style="margin-bottom: 15px;">
        <label for="company_name">Company Name</label>
        <input type="text" name="company_name" id="company_name" class="form-control" required>
      </div>

      <div style="margin-bottom: 15px;">
        <label for="phone_number">Phone Number</label>
        <input type="text" name="phone_number" id="phone_number" class="form-control" required>
      </div>

      <div style="margin-bottom: 15px;">
        <label for="representative_name">Representative Name</label>
        <input type="text" name="representative_name" id="representative_name" class="form-control" required>
      </div>

      <h4 style="margin-top: 20px;">Products</h4>
      <table class="table table-bordered" style="margin-bottom: 15px;">
        <thead>
          <tr>
            <th>Product Name</th>
            <th>Price per Unit</th>
            <th>Min Quantity</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><input type="text" name="product_name[]" class="form-control" required></td>
            <td><input type="number" name="price_per_unit[]" class="form-control price-per-unit" required></td>
            <td><input type="number" name="min_quantity[]" class="form-control min-quantity" required></td>
            <td><button type="button" class="btn btn-danger btn-sm remove-product-btn">Remove</button></td>
          </tr>
        </tbody>
      </table>

      <button type="button" class="btn btn-secondary btn-sm" id="add-product-btn">+ Add Product</button>

      <button type="submit" class="btn btn-primary w-100" style="margin-top: 20px;">Register</button>
    </form>

    <p style="text-align: center; margin-top: 20px;">
      Already have an account? <a href="/supplier/login">Login</a>
    </p>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function showValidationError(message) {
      alert(message);
    }

    document.getElementById('add-product-btn').addEventListener('click', function() {
      const tableBody = document.querySelector('table tbody');
      const newRow = document.createElement('tr');
      newRow.innerHTML = `
        <td><input type="text" name="product_name[]" class="form-control" required></td>
        <td><input type="number" name="price_per_unit[]" class="form-control price-per-unit" required></td>
        <td><input type="number" name="min_quantity[]" class="form-control min-quantity" required></td>
        <td><button type="button" class="btn btn-danger btn-sm remove-product-btn">Remove</button></td>
      `;
      tableBody.appendChild(newRow);
    });

    document.querySelector('table').addEventListener('click', function(event) {
      if (event.target.classList.contains('remove-product-btn')) {
        event.target.closest('tr').remove();
      }
    });

    document.getElementById('register-form').addEventListener('submit', function(event) {
      const priceInputs = document.querySelectorAll('.price-per-unit');
      const quantityInputs = document.querySelectorAll('.min-quantity');

      for (let i = 0; i < priceInputs.length; i++) {
        if (priceInputs[i].value < 0) {
          showValidationError('Price per Unit cannot be negative');
          event.preventDefault();
          return;
        }
      }

      for (let i = 0; i < quantityInputs.length; i++) {
        if (quantityInputs[i].value < 0) {
          showValidationError('Min Quantity cannot be negative');
          event.preventDefault();
          return;
        }
      }
    });
  </script>

</body>
</html>
